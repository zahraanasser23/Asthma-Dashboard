# -*- coding: utf-8 -*-
"""Asthma_Code .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oXjX9aWSpW2z4uLEgeJtJRanOhFS6pzg
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Define the data sets
data_sets = {
    "Data Set 1": "https://data.world/chhs/01f456c3-db34-44f2-a52c-6811bef8ba6d",
    "Data Set 2": "https://data.world/chhs/28698f95-0637-44f0-9072-a405d90f3f83",
    "Data Set 3": "https://data.world/chhs/5ea28f96-7bb6-4c18-9c0d-020484fab181"
}

# Function to load and preprocess the data set
def load_data(data_url):
    df = pd.read_csv(data_url)
    # Perform any necessary preprocessing steps here
    return df

# Set the app title
st.title("Data Set Dashboard")

# Create buttons for each data set
selected_data_set = st.radio("Select a Data Set", list(data_sets.keys()))

if st.button("Load Data Set"):
    st.write(f"Loading {selected_data_set}...")
    df = load_data(data_sets[selected_data_set])
    st.write(f"{selected_data_set} loaded successfully!")

    # Display the data set
    st.subheader("Data Set")
    st.dataframe(df)

    # Show descriptive statistics
    st.subheader("Descriptive Statistics")
    st.write(df.describe())

    # Show a bar chart of a specific column
    st.subheader("Bar Chart")
    column_to_plot = st.selectbox("Select a Column for Bar Chart", df.columns)
    plt.figure(figsize=(8, 6))
    sns.countplot(data=df, x=column_to_plot)
    plt.xlabel(column_to_plot)
    plt.ylabel("Count")
    st.pyplot()

    # Show a scatter plot of two columns
    st.subheader("Scatter Plot")
    x_column = st.selectbox("Select X Column for Scatter Plot", df.columns)
    y_column = st.selectbox("Select Y Column for Scatter Plot", df.columns)
    plt.figure(figsize=(8, 6))
    sns.scatterplot(data=df, x=x_column, y=y_column)
    plt.xlabel(x_column)
    plt.ylabel(y_column)
    st.pyplot()

    # Show a correlation heatmap
    st.subheader("Correlation Heatmap")
    plt.figure(figsize=(10, 8))
    sns.heatmap(df.corr(), annot=True, cmap="coolwarm")
    st.pyplot()